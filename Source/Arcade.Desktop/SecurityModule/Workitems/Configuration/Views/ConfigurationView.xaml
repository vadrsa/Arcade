<UserControl x:Class="SecurityModule.Workitems.Configuration.Views.ConfigurationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:mvvm="clr-namespace:Infrastructure.Mvvm;assembly=Infrastructure.Wpf" 
             xmlns:controls="clr-namespace:Arcade.CustomControls;assembly=Arcade.CustomControls"
             xmlns:local="clr-namespace:SecurityModule.Workitems.Configuration.Views"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <ResourceDictionary>
            <mvvm:BooleanToVisibilityConverter x:Key="visibilityConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </UserControl.Resources>
    <Grid>


            <DataGrid IsReadOnly="True" Margin="0 8 0 0" ItemsSource="{Binding List}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                     materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                <DataGrid.Columns>
                    <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:DataGridTextColumn Binding="{Binding Name}"
                                                           Header="Name"
                                                           EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                   Width="*"        
                                                   >
                </materialDesign:DataGridTextColumn>
                <materialDesign:DataGridTextColumn Binding="{Binding Value}"
                                                           Header="Value"
                                                           EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                           Width="*" />
                <!-- set a max length to get an indicator in the editor -->
                    <DataGridTemplateColumn Header="Command" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <Button Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                    CommandParameter="{Binding Path=Id}">Edit</Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        <Border
                Visibility="{Binding IsLoading, FallbackValue=Hidden, Converter={StaticResource visibilityConverter}}"
                Background="Black"
                Opacity="0.8">
        </Border>
        <controls:LoadingIndicator  SpeedRatio="1.5" IsActive="{Binding IsLoading, FallbackValue=False}" Mode="Arcs" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
        <controls:FaultedPage
                Visibility="{Binding IsLoadingFaulted, FallbackValue=Hidden, Converter={StaticResource visibilityConverter}}" Message="{Binding LoadingErrorMessage}" Command="{Binding ReloadCommand}"/>

    </Grid>
</UserControl>
